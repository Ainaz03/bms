"""initial

Revision ID: 312ef7dc165d
Revises: 
Create Date: 2025-06-11 01:41:10.324344

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '312ef7dc165d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('role', sa.Enum('ADMIN', 'MANAGER', 'USER', name='user_role_enum'), nullable=False, comment='Глобальная роль пользователя'),
        sa.Column('team_id', sa.Integer(), nullable=True, comment='ID команды, к которой привязан пользователь'),
        sa.Column('email', sa.String(length=320), nullable=False),
        sa.Column('hashed_password', sa.String(length=1024), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('is_superuser', sa.Boolean(), nullable=False),
        sa.Column('is_verified', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)

    op.create_table('teams',
        sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный идентификатор команды'),
        sa.Column('name', sa.String(length=100), nullable=False, comment='Название команды'),
        sa.Column('invite_code', sa.String(length=20), nullable=True, comment='Код приглашения для входа в команду'),
        sa.Column('admin_id', sa.Integer(), nullable=True, comment='ID пользователя — администратора команды'),
        sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_teams_id'), 'teams', ['id'], unique=False)
    op.create_index(op.f('ix_teams_invite_code'), 'teams', ['invite_code'], unique=True)

    # Теперь добавим внешнюю ссылку users.team_id на teams.id
    op.create_foreign_key(
        'fk_users_team_id_teams', 'users', 'teams', ['team_id'], ['id'], ondelete='SET NULL'
    )

    op.create_table('meetings',
        sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный идентификатор встречи'),
        sa.Column('title', sa.String(length=200), nullable=False, comment='Тема или название встречи'),
        sa.Column('start_time', sa.DateTime(timezone=True), nullable=False, comment='Дата и время начала встречи'),
        sa.Column('end_time', sa.DateTime(timezone=True), nullable=False, comment='Дата и время окончания встречи'),
        sa.Column('creator_id', sa.Integer(), nullable=True, comment='ID пользователя, создавшего встречу'),
        sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meetings_id'), 'meetings', ['id'], unique=False)

    op.create_table('tasks',
        sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный идентификатор задачи'),
        sa.Column('title', sa.String(length=200), nullable=False, comment='Краткое название задачи'),
        sa.Column('description', sa.Text(), nullable=True, comment='Подробное описание задачи'),
        sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'DONE', name='task_status_enum'), nullable=False, comment='Текущий статус задачи'),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='Дата и время создания задачи'),
        sa.Column('deadline', sa.DateTime(timezone=True), nullable=True, comment='Срок выполнения задачи'),
        sa.Column('creator_id', sa.Integer(), nullable=True, comment='ID пользователя, создавшего задачу'),
        sa.Column('assignee_id', sa.Integer(), nullable=True, comment='ID пользователя—исполнителя задачи'),
        sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], ondelete='SET NULL'),
        sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)

    op.create_table('comments',
        sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный идентификатор комментария'),
        sa.Column('text', sa.Text(), nullable=False, comment='Текст комментария'),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='Дата и время создания комментария'),
        sa.Column('task_id', sa.Integer(), nullable=False, comment='ID задачи, к которой относится комментарий'),
        sa.Column('author_id', sa.Integer(), nullable=True, comment='ID пользователя-автора комментария'),
        sa.ForeignKeyConstraint(['author_id'], ['users.id'], ondelete='SET NULL'),
        sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)

    op.create_table('evaluations',
        sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный идентификатор оценки'),
        sa.Column('score', sa.Integer(), nullable=False, comment='Баллы, выставленные за задачу (1–5)'),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='Дата и время создания оценки'),
        sa.Column('task_id', sa.Integer(), nullable=False, comment='ID задачи, для которой выставлена оценка'),
        sa.Column('evaluator_id', sa.Integer(), nullable=True, comment='ID пользователя, который выставил оценку'),
        sa.ForeignKeyConstraint(['evaluator_id'], ['users.id'], ondelete='SET NULL'),
        sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('task_id')
    )
    op.create_index(op.f('ix_evaluations_id'), 'evaluations', ['id'], unique=False)

    op.create_table('meeting_participants',
        sa.Column('meeting_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id']),
        sa.ForeignKeyConstraint(['user_id'], ['users.id']),
        sa.PrimaryKeyConstraint('meeting_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('meeting_participants')
    op.drop_index(op.f('ix_evaluations_id'), table_name='evaluations')
    op.drop_table('evaluations')
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_meetings_id'), table_name='meetings')
    op.drop_table('meetings')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_teams_invite_code'), table_name='teams')
    op.drop_index(op.f('ix_teams_id'), table_name='teams')
    op.drop_table('teams')
    # ### end Alembic commands ###
